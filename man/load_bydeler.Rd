% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{load_bydeler}
\alias{load_bydeler}
\title{Load, Process, and Simplify City District (Bydel) Data}
\usage{
load_bydeler(bydel_file, fylke_file)
}
\arguments{
\item{bydel_file}{Character string. The path to the spatial file containing
city district boundaries (e.g., "data-raw/bydel2020_mednavn.gml").}

\item{fylke_file}{Character string. The path to the spatial file containing
county boundaries (e.g., "data-raw/fylker.geojson").}
}
\value{
A named list of simplified \code{sf} objects. Each element of the list
(e.g., \code{Oslo}) is an \code{sf} data frame with columns \code{bydelnavn}, \code{bydelnr},
\code{navn} (from fylke), and \code{nummer} (from fylke).
}
\description{
This function reads city district and county boundary files, intersects them
to add county information to each district, simplifies the geometries, and
returns a processed list of city districts for major Norwegian cities.
}
\details{
The function expects two spatial data files readable by \code{sf::st_read()}:
\itemize{
\item \code{bydel_file}: Must contain at least the columns \code{bydelnavn}
(district name) and \code{bydelnr} (district number). The function uses
\code{bydelnr} to filter for Oslo (starting with "03"), Bergen ("46"),
Stavanger ("11"), and Trondheim ("50").
\item \code{fylke_file}: Must contain at least the columns \code{navn} (county
name) and \code{nummer} (county number). These attributes are joined to
the district data during the intersection.
}
The function also cleans the data by removing the "Marka" district from Oslo.
}
\examples{
\dontrun{
  # This example requires the specific data files in the correct format.
  bydeler_data <- load_bydeler(
    bydel_file = "data-raw/bydel2020_mednavn.gml",
    fylke_file = "data-raw/fylker.geojson"
  )

  # View the processed districts for Oslo, which now include fylke info
  print(head(bydeler_data$Oslo))
}
}
